--------------------------------------------------------------------------------
NOTE: THIS FRAMEWORK IS NOT YET SUITABLE FOR PRODUCTION ENVIRONMENTS.
      (However, you can still give it a try, it may suit your needs).
--------------------------------------------------------------------------------
This framework is a very young project, started on 12/16/2010 because of the
lack of spring-alike frameworks for php.

Performance *is* a concern, but not now, because the framework is still in
development. 
--------------------------------------------------------------------------------
Please see example.php for a very basic example of use.
--------------------------------------------------------------------------------
Notes about the source:

* There is no official release yet! So expect changes and be patience, the
work will get done. Also, performance will eventually be taken care of.

* If you're wondering why the first comment of each source file is repeated,
it's because they're actually 2 different comments: one for the file, and one
for the class.
--------------------------------------------------------------------------------
DI
==
Features available:
* Setter injection (arrays, values, and/or references to other beans).
* Constructor injection (arrays, values, and/or references to other beans).
* A bean can be: singleton or prototype (multiple instances).
* Can create beans by specifying a static method of the bean class itself.
* Can create beans by specifying another bean (and its method) as a factory.
* Properties for your beans.xml, like: ${log.dir}/alog.log
--------------------------------------------------------------------------------
AOP
===
In order to make aspects work, there's some kind of interceptors implementation.
Currently, there are 2 available interceptors:

* IMethodInterceptor: Implement this one to be called before every method
 execution (use proceed() to continue the chained execution), resuming your
 own afterwards.
* IExceptionInterceptor: Implement this one to be called when an aspected
 method throws an exception.
 
--------------------------------------------------------------------------------
Integration with other frameworks
=================================
See our doctrine2 integration: https://github.com/marcelog/Ding/tree/master/docs/examples/doctrine

 Collaborators:
 ============
agvstin | agu.gutierrez@gmail.com
